<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- use-expressions는 intercept-url 태그의 access 속성에서 스프링 시큐리티가 제공하는 SpEL을 사용할 수 있게 해줌  -->
	<sec:http use-expressions="true">
		<!-- hasRole(), hasAuthority()는 같은 의미 --> 
		<sec:intercept-url pattern="/admin/**" access="hasAuthority('ROLE_ADMIN')"></sec:intercept-url>
		<sec:intercept-url pattern="/manager/**" access="hasRole('ROLE_MANAGER')"></sec:intercept-url>
		<!-- isAuthenticated() 인증된 사용자먼 접근 가능 -->
		<sec:intercept-url pattern="/member/**" access="isAuthenticated()"></sec:intercept-url>
		<!-- permitAll 누구나 접근 가능 -->
		<sec:intercept-url pattern="/**" access="permitAll"></sec:intercept-url>
		<sec:form-login/> <!-- 인증된 사용자만 허용되는 자원에 접근할 때, 로그인 폼을 보여준다. -->
		<sec:logout/>
	</sec:http>
	
	<sec:authentication-manager>
		<sec:authentication-provider>
			<!-- 테스트를 위한 사용자 생성 -->
			<sec:user-service>
				<sec:user name="bkchoi" password="1234" authorities="ROLE_USER"/>
				<sec:user name="manager" password="qwer" authorities="ROLE_MANAGER"/>
				<sec:user name="admin" password="asdf" authorities="ROLE_ADMIN,ROLE_USER"/>
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
	
</beans>
		
